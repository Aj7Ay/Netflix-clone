# name: Exploring variables and secrets

# on:
#     push

# #Environment variable defined at the workflow level

# env:
#         CONTAINER_REGISTRY: docker.io
#         DOCKER_USERNAME: siddharth1
#         IMAGE_NAME: github-actions-nginx

# jobs:

#     docker:
#         runs-on: ubuntu-latest
#         steps:
#         -   name: Docker Build
#             run: docker build -t docker.io/dockerusername/imageName:latest

#         -   name: Docker Login
#             run: docker login --username=dockerUsername --pasword=s3cUrePaSsw0rd

#         -   name: Docker Publish
#             run: docker push docker.io/dockerusername/imageName:latest

        
#     deploy:
#         needs: docker
#         runs-on: ubuntu-latest
#         steps: 
#         -   name: Docker Run
#             run: docker run -d -p 8080:80 docker.io/dockerusername/imageName:latest


################## environment variables at STEP level #####################

 # Note it is best to define environment variables at the job level so that they can be reusable in different jobs

    # docker:
    #     runs-on: ubuntu-latest
    #     steps:
    #     -   name: Docker Build
    #         env:
    #             CONTAINER_REGISTRY: docker.io
    #             DOCKER_USERNAME: siddharth1
    #             IMAGE_NAME: github-actions-nginx
    #         run: echo docker build -t $CONTAINER_REGISTRY/$DOCKER_USERNAME/$IMAGE_NAME:latest

    #     -   name: Docker Login
    #         env:
    #             DOCKER_PASSWORD: s3cUrePaSsw0rd
    #             DOCKER_USERNAME: siddharth1
    #         run: echo docker login --username=$DOCKER_USERNAME --password=$DOCKER_PASSWORD

    #     -   name: Docker Publish
    #         env:   # Define environment variables
    #             CONTAINER_REGISTRY: docker.io
    #             DOCKER_USERNAME: siddharth1
    #             IMAGE_NAME: github-actions-nginx
    #         run: echo docker push $CONTAINER_REGISTRY/$DOCKER_USERNAME/$IMAGE_NAME:latest

    # deploy: 
    #     needs: docker
    #     runs-on: ubuntu-latest
    #     steps:
    #     -   name: Docker Run
    #         env: 
    #             CONTAINER_REGISTRY: docker.io
    #             DOCKER_USERNAME: siddharth1
    #             IMAGE_NAME: github-actions-nginx
    #         run: echo docker run -d -p 8080:80 ${{ env.CONTAINER_REGISTRY }}/${{ env.DOCKER_USERNAME}}/${{ env.IMAGE_NAME}}:latest
    #             # Another way to use environment variables is using curly braces {{env.}}


################## environment variables at JOB level #####################

 # Note it is good to define environment variables at the job level so that they can be reusable in different jobs

    # docker:
    #     env:
    #         CONTAINER_REGISTRY: docker.io
    #         DOCKER_USERNAME: siddharth1
    #         IMAGE_NAME: github-actions-nginx
    #     runs-on: ubuntu-latest
    #     steps:
    #     -   name: Docker Build
    #         run: echo docker build -t ${{ env.CONTAINER_REGISTRY }}/${{ env.DOCKER_USERNAME}}/${{ env.IMAGE_NAME}}:latest

    #     -   name: Docker Login
    #         env:
    #             DOCKER_PASSWORD: S3cUrePaSsw0rd
    #         run: echo docker login --username=$DOCKER_USERNAME --password=$DOCKER_PASSWORD

    #     -   name: Docker Publish
    #         run: echo docker push ${{ env.CONTAINER_REGISTRY }}/${{ env.DOCKER_USERNAME}}/${{ env.IMAGE_NAME}}:latest

        
    # deploy:
    #     env: 
    #         CONTAINER_REGISTRY: docker.io
    #         DOCKER_USERNAME: siddharth1
    #         IMAGE_NAME: github-actions-nginx
    #     needs: docker
    #     runs-on: ubuntu-latest
    #     steps: 
    #     -   name: Docker Run
    #         run: docker run -d -p 8080:80 ${{ env.CONTAINER_REGISTRY }}/${{ env.DOCKER_USERNAME}}/${{ env.IMAGE_NAME}}:latest


################## environment variables at Workflow level #####################
# Defining evironment variables at the Workflow level

    # docker:
    #     runs-on: ubuntu-latest
    #     steps:
    #     -   name: Docker Build
    #         run: echo docker build -t ${{ env.CONTAINER_REGISTRY }}/${{ env.DOCKER_USERNAME}}/${{ env.IMAGE_NAME}}:latest

    #     -   name: Docker Login
    #         env:
    #             DOCKER_PASSWORD: S3cUrePaSsw0rd
    #         run: echo docker login --username=$DOCKER_USERNAME --password=$DOCKER_PASSWORD

    #     -   name: Docker Publish
    #         run: echo docker push ${{ env.CONTAINER_REGISTRY }}/${{ env.DOCKER_USERNAME}}/${{ env.IMAGE_NAME}}:latest

        
    # deploy:
    #     needs: docker
    #     runs-on: ubuntu-latest
    #     steps: 
    #     -   name: Docker Run
    #         run: docker run -d -p 8080:80 ${{ env.CONTAINER_REGISTRY }}/${{ env.DOCKER_USERNAME}}/${{ env.IMAGE_NAME}}:latest


########### environment variables and secrets at the repository level ####################

    name: Exploring Variables and Secrets

    on:
      workflow_dispatch: 
      # schedule:
      #   - cron: '*/1 * * * *'
      push:
    
    env:
        CONTAINER_REGISTRY: docker.io
        IMAGE_NAME: github-actions-nginx    
    
    jobs:
      docker:
        runs-on: ubuntu-latest
        steps:
        - name: Docker Build
          run: echo docker build -t ${{ env.CONTAINER_REGISTRY }}/${{ vars.DOCKER_USERNAME }}/$IMAGE_NAME:latest
    
        - name: Docker Login
          run: echo docker login --username=${{ vars.DOCKER_USERNAME }} --password=${{ secrets.DOCKER_PASSWORD }}
    
        - name: Docker Publish
          run: echo docker push $CONTAINER_REGISTRY/${{ vars.DOCKER_USERNAME }}/$IMAGE_NAME:latest
    
      deploy:
        if: github.ref == 'refs/heads/main'
        needs: docker
        concurrency: 
          group: production-deployment
          cancel-in-progress: false
        runs-on: ubuntu-latest
        steps:
        - name: Docker Run
          timeout-minutes: 1
          run: |
            echo docker run -d -p 8080:80 $CONTAINER_REGISTRY/${{ vars.DOCKER_USERNAME }}/$IMAGE_NAME:latest
            sleep 600s